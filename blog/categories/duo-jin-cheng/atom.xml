<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 多进程 | 狂奔的蜗牛]]></title>
  <link href="http://bgallon.github.io/blog/categories/duo-jin-cheng/atom.xml" rel="self"/>
  <link href="http://bgallon.github.io/"/>
  <updated>2016-08-13T15:46:15+08:00</updated>
  <id>http://bgallon.github.io/</id>
  <author>
    <name><![CDATA[fishpan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IPC机制-多进程]]></title>
    <link href="http://bgallon.github.io/blog/2016/08/13/ipcji-zhi-duo-jin-cheng/"/>
    <updated>2016-08-13T15:03:24+08:00</updated>
    <id>http://bgallon.github.io/blog/2016/08/13/ipcji-zhi-duo-jin-cheng</id>
    <content type="html"><![CDATA[<p>一个应用默认只有一个进程，这个进程的名字就是应用的包名，进程是系统分配资源和调度的基本单位，每个进程都要有自己的资源和空间，其它程序不能任意访问当前进程的空间，系统给每个进程分配的空间会有限制。</p>

<!--more-->


<p>但是这都是默认情况下的事情，伟大的程序员是不会屈服一个进程的，我就弄出多个进程来玩玩；Android系统也是蛮大方的，你要多个，好，我来满足你，你可以指定一些组件运行在不同的进程中，只需指定组件的：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>android:process
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>设置process属性的方式有两种：</p>

<ul>
<li>android:process=&ldquo;:remote&rdquo;,以冒号开头，冒号后边的字符是可以随意指定的。当然这只是一种缩写形式，全称应该是：包名+&ldquo;:remote"；这种形式表示该进程为当前应用的私有进程，其它应用的组件不可以和它跑在同一个进程中。</li>
<li>android:process=&ldquo;xxx.xxx"表示运行在以这个名称的全局进程中，其它应用可以通过shareUID和他跑在同一个进程中；</li>
</ul>


<p>虽然开启多进程是非常非常简单，但是有很多坑，一不小心就掉进去了：</p>

<ul>
<li>Application多次创建，启动多进程的生活，Application会被多次创建，在application中我们可以通过当前进程名字，来初始化数据，防止无必要的初始化</li>
<li>静态成员失效，各个进程是单独分配的内存，所以这里的静态成员变量将会失效</li>
<li>文件共享，多个进程同时访问一个文件时，可能造成文件损坏丢失等情况</li>
<li>断点调试的问题。调试就是跟踪程序运行过程中的堆栈信息，由于每个进程都有自己独立的内存空间和各自的堆栈，无法实现在不同的进程间调试</li>
</ul>

]]></content>
  </entry>
  
</feed>
